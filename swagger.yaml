swagger: '2.0'
info:
  description: This is a simple Mergin src.
  version: '0.1'
  title: Mergin
basePath: /v1
tags:
  - name: project
    description: Mergin projects
schemes:
  - https
  - http
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []
definitions:
  Storage:
    type: string
    enum: &STORAGES
      - local
      - goggle_drive

  StorageParams:
    type: object
    properties:
      type:
        type: string
        enum: *STORAGES
    additionalProperties: true

  ProjectMeta:
    type: object
    properties:
      size:
        type: integer
        format: int64
      files_count:
        type: integer
  Project:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: mergin
      storage_params:
        type: object
        properties:
          meta:
            $ref: '#/definitions/ProjectMeta'
        example:
          type: local
          location: mergin
      created:
        type: string
        format: date-time
    example:
      name: mergin
      storage_params:
        type: local
        location: mergin
      meta:
        size: 244398512
        files_count: 71
  FileInfo:
    type: object
    properties:
      path:
        type: string
      type:
        type: string
        enum:
          - folder
          - file
      mtime:
        type: string
      size:
        type: integer
        format: int64
  ProjectListItem:
    allOf:
      - $ref: '#/definitions/Project'
      - type: object
        properties:
          meta:
            $ref: '#/definitions/ProjectMeta'
  ProjectDetail:
    allOf:
      - $ref: '#/definitions/Project'
      - type: object
        properties:
          files:
            type: array
            items:
              $ref: '#/definitions/FileInfo'
    example:
      files:
        - path: svg
          type: folder
          mtime: '2018-10-17T12:57:16.180008Z'
        - path: svg/image.svg
          type: file
          mtime: '2018-10-17T12:57:16.180008Z'
paths:
  /project:
    get:
      tags:
        - project
      summary: Find all mergin projects.
      description: Returns list of all projects.
      operationId: get_projects
      produces:
        - application/json
      parameters: []
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectListItem'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
      x-swagger-router-controller: src.controllers.project_controller
    post:
      tags:
        - project
      summary: Add a new mergin project.
      description: ''
      operationId: add_project
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - basicAuth: []
      parameters:
        - in: body
          name: project
          description: Project object that needs to be added to the database.
          required: true
          schema:
            type: object
            required:
              - name
              - storage_params
            properties:
              name:
                type: string
                example: mergin
              storage_params:
                $ref: '#/definitions/StorageParams'

      responses:
        '200':
          $ref: '#/responses/Success'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          description: Invalid input
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/{project_name}':
    get:
      tags:
        - project
      summary: Find project by name.
      description: Returns a single project.
      operationId: get_project
      produces:
        - application/json
      parameters:
        - name: project_name
          in: path
          description: name of project to return
          required: true
          type: string
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ProjectDetail'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
    post:
      tags:
        - project
      summary: Update an existing project.
      description: ''
      operationId: update_project
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: project_name
          in: path
          description: name of project that need to be updated.
          required: true
          type: string
        - in: body
          name: project
          description: Project object that needs to be updated.
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                example: mergin
              storage_params:
                $ref: '#/definitions/StorageParams'
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
        '405':
          description: Validation exception.
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
    delete:
      tags:
        - project
      summary: Delete a project.
      description: ''
      operationId: delete_project
      produces:
        - application/json
      parameters:
        - name: project_name
          in: path
          description: name of project to delete.
          required: true
          type: string
      security:
        - basicAuth: []
      responses:
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/download/{project_name}':
    get:
      tags:
        - project
      summary: Download dir for single project.
      operationId: download_project
      produces:
        - application/zip
      parameters:
        - name: project_name
          in: path
          description: name of project to return.
          required: true
          type: string
        - name: format
          in: query
          description: output format.
          required: false
          type: string
          enum:
            - zip
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success.
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/raw/{project_name}':
    get:
      tags:
        - project
      summary: Download single project file.
      operationId: download_project_file
      produces:
        - application/zip
      parameters:
        - name: project_name
          in: path
          description: name of project.
          required: true
          type: string
        - name: file
          in: query
          description: path of file.
          required: true
          type: string
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success.
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid.
    headers:
      WWW_Authenticate:
        type: string
  NotFoundResp:
    description: Project not found.
  BadStatusResp:
    description: Invalid request.
  InvalidDataResp:
    description: Invalid/unprocessable data.
  Success:
    description: Success.

